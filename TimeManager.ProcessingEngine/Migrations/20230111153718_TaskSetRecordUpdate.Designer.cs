// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeManager.ProcessingEngine.Data;

#nullable disable

namespace TimeManager.ProcessingEngine.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230111153718_TaskSetRecordUpdate")]
    partial class TaskSetRecordUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TimeManager.ProcessingEngine.Data.TaskDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TaskSetRecordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskSetRecordId");

                    b.ToTable("TaskDate");
                });

            modelBuilder.Entity("TimeManager.ProcessingEngine.Data.TaskDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCompleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TaskDTO");
                });

            modelBuilder.Entity("TimeManager.ProcessingEngine.Data.TaskRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TaskRecords");
                });

            modelBuilder.Entity("TimeManager.ProcessingEngine.Data.TaskSetRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("AvgExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Efficiency")
                        .HasColumnType("int");

                    b.Property<int?>("FailedTasks")
                        .HasColumnType("int");

                    b.Property<int?>("SuccededTasks")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskSetRecords");
                });

            modelBuilder.Entity("TimeManager.ProcessingEngine.Data.UserSet", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int>("ActivitiesDone")
                        .HasColumnType("int");

                    b.Property<int>("ActivitiesDoneEarlier")
                        .HasColumnType("int");

                    b.Property<int>("ActivitiesDoneWithDelay")
                        .HasColumnType("int");

                    b.Property<int>("Performance")
                        .HasColumnType("int");

                    b.Property<int>("Productivity")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("UserRecords");
                });

            modelBuilder.Entity("TimeManager.ProcessingEngine.Data.TaskDate", b =>
                {
                    b.HasOne("TimeManager.ProcessingEngine.Data.TaskSetRecord", null)
                        .WithMany("TaskOccurencies")
                        .HasForeignKey("TaskSetRecordId");
                });

            modelBuilder.Entity("TimeManager.ProcessingEngine.Data.TaskSetRecord", b =>
                {
                    b.HasOne("TimeManager.ProcessingEngine.Data.TaskDTO", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("TimeManager.ProcessingEngine.Data.TaskSetRecord", b =>
                {
                    b.Navigation("TaskOccurencies");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeManager.ProcessingEngine.Data;

#nullable disable

namespace TimeManager.ProcessingEngine.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230204133104_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TimeManager.ProcessingEngine.Data.TaskDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TaskSetRecordsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskSetRecordsId");

                    b.ToTable("TaskDate");
                });

            modelBuilder.Entity("TimeManager.ProcessingEngine.Data.TaskRecords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Efficiency")
                        .HasColumnType("float");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TaskRecords");
                });

            modelBuilder.Entity("TimeManager.ProcessingEngine.Data.TaskSetRecords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("AvgExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Efficiency")
                        .HasColumnType("int");

                    b.Property<int?>("FailedTasks")
                        .HasColumnType("int");

                    b.Property<int?>("SuccededTasks")
                        .HasColumnType("int");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TaskSetRecords");
                });

            modelBuilder.Entity("TimeManager.ProcessingEngine.Data.UserRecords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AverageTaskDuration")
                        .HasColumnType("int");

                    b.Property<int>("Effectivity")
                        .HasColumnType("int");

                    b.Property<int>("FailedTasks")
                        .HasColumnType("int");

                    b.Property<int>("Productivity")
                        .HasColumnType("int");

                    b.Property<int>("SuccededTasks")
                        .HasColumnType("int");

                    b.Property<int>("TaskCount")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRecords");
                });

            modelBuilder.Entity("TimeManager.ProcessingEngine.Data.TaskDate", b =>
                {
                    b.HasOne("TimeManager.ProcessingEngine.Data.TaskSetRecords", null)
                        .WithMany("TaskOccurencies")
                        .HasForeignKey("TaskSetRecordsId");
                });

            modelBuilder.Entity("TimeManager.ProcessingEngine.Data.TaskSetRecords", b =>
                {
                    b.Navigation("TaskOccurencies");
                });
#pragma warning restore 612, 618
        }
    }
}
